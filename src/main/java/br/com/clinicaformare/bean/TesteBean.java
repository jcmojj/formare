package br.com.clinicaformare.bean;

import java.io.Serializable;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;

import br.com.clinicaformare.daos.usuario.endereco.PaesciDao;

@Named
@ViewScoped
public class TesteBean implements Serializable{
	private static final long serialVersionUID = 1L;
	
	
	
//	@Inject
//	PaesciDao paesciDao;
//	
//	private Long paesciLong = 0L;
//		
//	public Long getPaesciLong() {
//		return paesciLong;
//	}
//
//	public void setPaesciLong(Long paesciLong) {
//		this.paesciLong = paesciLong;
//	}
//	
//	// Generated by Map
//	Map<Long, String> paisesHash = new LinkedHashMap<Long, String>();
//	
//	public Map<Long, String> getPaisesHash() {
//		paisesHash = new LinkedHashMap<Long, String>();
//		List<String> paisesString = paesciDao.paises();
//		Long counter = 1L;
//		for (String pais : paisesString) {
//			paisesHash.put(counter, pais);
//			counter++;
//		}
//		return paisesHash;
//	}
//	
	
	// NASCIMENTO
	// Pa√≠s
	@Inject
	PaesciDao paesciDao;
	
	private Long paisLong = 0L;
	private String pais;
		
	public Long getPaisLong() {
		return paisLong;
	}

	public void setPaisLong(Long paisLong) {
		this.paisLong = paisLong;
		pais = paisesHash.get(paisLong);
		System.out.println("pais" + pais);
	}
	
	// Generated by Map
	Map<Long, String> paisesHash = new LinkedHashMap<Long, String>();
	
	public Map<Long, String> getPaisesHash() {
		paisesHash = new LinkedHashMap<Long, String>();
		List<String> paisesString = paesciDao.paises();
		Long counter = 1L;
		for (String pais : paisesString) {
			paisesHash.put(counter, pais);
			counter++;
		}
		return paisesHash;
	}
	
	
	private String favCoffee2;

	public String getFavCoffee2() {
		return favCoffee2;
	}

	public void setFavCoffee2(String favCoffee2) {
		this.favCoffee2 = favCoffee2;
	}

	// Generated by Map
	private static Map<String, Object> coffee2Value;
	static {
		coffee2Value = new LinkedHashMap<String, Object>();
		coffee2Value.put("Coffee2 - Cream Latte", "Cream Latte"); // label, value
		coffee2Value.put("Coffee2 - Extreme Mocha", "Extreme Mocha");
		coffee2Value.put("Coffee2 - Buena Vista", "Buena Vista");
	}

	public Map<String, Object> getFavCoffee2Value() {
		return coffee2Value;
	}
}
